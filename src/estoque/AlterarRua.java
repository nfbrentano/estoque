/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package estoque;

import DAO.bairroDAO;
import DAO.cidadeDAO;
import DAO.enderecoDAO;
import DAO.produtoDAO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author nfbrentano
 */
public class AlterarRua extends javax.swing.JFrame {

    /**
     * Creates new form CadastrarPais
     */
    public AlterarRua() {
        initComponents();
        this.preencheJComboBoxEndereco();
    }

    /**
     * Preenche o campo de bairros na tela com as informações cadastradas no
     * banco de dados
     */
    public void preencheJComboBoxEndereco() {
        ResultSet result;
        String sql = "SELECT * FROM endereco ORDER BY rua";

        try {
            String url = "jdbc:postgresql://localhost:5432/trabalho";
            String usuario = "postgres";
            String senha = "postgres";
            Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection(url, usuario, senha);
            Statement stm = con.createStatement();
            result = stm.executeQuery(sql);
            while (result.next()) {
                jCBrua.addItem(result.getString("rua"));
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * Preenche o campo de cidades na tela com as informações cadastradas no
     * banco de dados
     */
    public void preencheJComboBoxCidade() {
        ResultSet result;
        String sql = "SELECT * FROM cidade ORDER BY nome";

        try {
            String url = "jdbc:postgresql://localhost:5432/trabalho";
            String usuario = "postgres";
            String senha = "postgres";
            Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection(url, usuario, senha);
            Statement stm = con.createStatement();
            result = stm.executeQuery(sql);
            while (result.next()) {
                jCBbairro.addItem(result.getString("nome"));
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * Insere dados na tela referentes ao nome selecionado na busca
     *
     * @param id do bairro cadastrado
     */
    public void preencheCadastro(String rua) {
        ResultSet result;
        String sql = "SELECT r.idendereco AS id, r.rua AS rua, b.nome AS bairro FROM endereco r INNER JOIN bairro b ON (b.idbairro = r.bairro_idbairro) WHERE r.rua ='" + rua + "';";

        try {
            String url = "jdbc:postgresql://localhost:5432/trabalho";
            String usuario = "postgres";
            String senha = "postgres";
            System.out.println(sql);
            System.out.println("oi oi");
            Class.forName("org.postgresql.Driver");
            Connection con = DriverManager.getConnection(url, usuario, senha);
            Statement stm = con.createStatement();
            result = stm.executeQuery(sql);
            while (result.next()) {
                jTidRua.setText(result.getString("id"));
                JtnomeRua.setText(result.getString("rua"));
                jCBbairro.addItem(result.getString("bairro"));
                this.preencheJComboBoxCidade();
            }
            con.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jColorChooser2 = new javax.swing.JColorChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollBar1 = new javax.swing.JScrollBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jBalterarBairro = new javax.swing.JButton();
        jBcancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTidRua = new javax.swing.JTextField();
        jCBbairro = new javax.swing.JComboBox<>();
        JtnomeRua = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jCBrua = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Bairro");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(400, 300));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Alterar Rua");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 135, -1));

        jLabel2.setText("ID* :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 90, -1, -1));

        jLabel3.setText("Nome do Rua* :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

        jBalterarBairro.setText("Alterar");
        jBalterarBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalterarBairroActionPerformed(evt);
            }
        });
        getContentPane().add(jBalterarBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, -1, -1));

        jBcancelar.setText("Cancelar");
        jBcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jBcancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, -1, -1));

        jLabel4.setText("* Campos Obrigatórios.");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, -1, -1));

        jTidRua.setEditable(false);
        jTidRua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTidRuaActionPerformed(evt);
            }
        });
        getContentPane().add(jTidRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 140, -1));

        jCBbairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBbairroActionPerformed(evt);
            }
        });
        getContentPane().add(jCBbairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 140, -1));

        JtnomeRua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtnomeRuaActionPerformed(evt);
            }
        });
        getContentPane().add(JtnomeRua, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 140, -1));

        jLabel5.setText("Bairro*:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jCBrua.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBruaItemStateChanged(evt);
            }
        });
        getContentPane().add(jCBrua, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 140, -1));

        jLabel6.setText("Rua* :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jBcancelarActionPerformed

    private void jBalterarBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalterarBairroActionPerformed
        //recebe dados da tela
        String id = jTidRua.getText();
        String rua = JtnomeRua.getText();
        String bairro = (String) jCBbairro.getSelectedItem();
        bairroDAO.selectBairroId(bairro);
        String obrigatorio = "";
        boolean controle = false;
        //validação
        if (id.equals("")) {
            obrigatorio = obrigatorio + "\n - ID";
            controle = true;
        }
        if (rua.equals("")) {
            obrigatorio = obrigatorio + "\n - Nome do Bairro";
            controle = true;
        }
        if (bairro.equals("")) {
            obrigatorio = obrigatorio + "\n - Nome da Cidade";
            controle = true;
        }
        if (controle == false) {
            enderecoDAO.updateCadastroEndereco(rua, bairroDAO.selectBairroId(bairro), id);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Campos obrigatorios:" + obrigatorio);
        }


    }//GEN-LAST:event_jBalterarBairroActionPerformed

    private void jCBbairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBbairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBbairroActionPerformed

    private void JtnomeRuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtnomeRuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtnomeRuaActionPerformed

    private void jTidRuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTidRuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTidRuaActionPerformed

    private void jCBruaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBruaItemStateChanged
        //chama a função de preencher cadastros quando altera o item selecionado no combobox
        preencheCadastro((String) jCBrua.getSelectedItem());
    }//GEN-LAST:event_jCBruaItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JtnomeRua;
    private javax.swing.JButton jBalterarBairro;
    private javax.swing.JButton jBcancelar;
    private javax.swing.JComboBox<String> jCBbairro;
    private javax.swing.JComboBox<String> jCBrua;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JColorChooser jColorChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JTextField jTidRua;
    // End of variables declaration//GEN-END:variables
}
